<?php

// Create an admin subpage to allow admin import review to Gravity Write a Review form

//function my_myme_types($mime_types){
//    $mime_types['csv'] = 'text/csv'; //Adding svg extension
//    return $mime_types;
//}
//add_filter('upload_mimes', 'my_myme_types', 1, 1);

//

//Todo: BinhBui-Since Wordpress 4.7.2 doesn't accept CSV upload, we add filter to by pass this restriction.
//Todo: Remember to delete the filter below if 4.7.3 or later allow to upload CSV
function cf_disable_real_mime_check($data,$file,$filename,$mimes){
    $wp_filetype		=	wp_check_filetype($filename,$mimes);
    $ext				=	$wp_filetype['ext'];
    $type				=	$wp_filetype['type'];
    $proper_filename	=	$data['proper_filename'];
    return compact('ext','type','proper_filename');
}
add_filter('wp_check_filetype_and_ext','cf_disable_real_mime_check',10,4);

//Add menu page to for importing file
add_action('admin_menu', 'import_review_for_gravity_review_form');

function import_review_for_gravity_review_form() {
    $page_title = "Importing Review Entries For Gravity Write A Review Form";
    $menu_title = "GO - Import Reviews For GF";
    $capability = "edit_posts";
    $menu_slug = "importing_review_for_gravity_write_a_review_form";
    $function = "go_gravity_form_import_entries";

    $parent_slug = 'tools.php';

    add_submenu_page($parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);
}

/**
 * Check if the variable is empty or not
 * @param $var
 * @return bool
 */

function strict_empty($var){

    $var = trim($var);

    if(isset($var) === true && $var === '') {

        //Yes, it is empty
        return true;

    }
    else {
        //No, it is not empty
        return false;

    }

}

function go_gravity_form_import_entries($gravity_form_id = 2)
{
    //gravity form id
    $gravity_form_id = 2;

    $error_message = '';
    if(isset($_POST["upload_review"])){

        //$filepath = '';

        if ($_FILES["review_file"]["error"] > 0){
            $error_flag = 1;
            $error_message = "There is an error. Return Code: " . $_FILES["review_file"]["error"];
        }
        // BB- This check doesn't work for CSV on PC/Windows
//        else if ($_FILES["review_file"]["type"] != 'text/csv' || $_FILES["review_file"]["type"] != 'application/vnd.ms-excel') {
//            $error_flag = 1;
//            $error_message = "The upload file must be CSV format";
//        }
        else if ($_FILES["review_file"]["size"] <= 0) {
            $error_flag = 1;
            //check file size
            $error_message = "Please submit a real csv file with data";

        } else {
            //process file here

            //move it to upload folder
            if ( ! function_exists( 'wp_handle_upload' ) ) {
                require_once( ABSPATH . 'wp-admin/includes/file.php' );
            }

            $uploadedfile = $_FILES['review_file'];

            $upload_overrides = array( 'test_form' => false );

            $movefile = wp_handle_upload( $uploadedfile, $upload_overrides );

            if ( $movefile && ! isset( $movefile['error'] ) ) {
                $error_flag = 0;
                $error_message =  "File is valid, and was successfully uploaded.\n";
                //var_dump( $movefile );
            } else {
                /**
                 * Error generated by _wp_handle_upload()
                 * @see _wp_handle_upload() in wp-admin/includes/file.php
                 */
                $error_flag = 1;
                $error_message = $movefile['error'];
            }

            $filepath = $movefile["file"];

            if(!empty($filepath)){

                //deal with Mac line endings
                ini_set('auto_detect_line_endings',TRUE);

                $row = 1;
                if (($handle = fopen($filepath, "r")) !== FALSE) {
                    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {

                        error_log("my data: " . print_r($data, true));

                        //$num = count($data);

                        $your_name = '';
                        $email = 'import.default@gmail.com';
                        $rating_star = 1;
                        $comment = '';
                        $is_starred = 1;
                        $date_created = date('Y-m-d');

                        //remove space from the beginning and end of str


                        if(isset($data[1]) && !strict_empty($data[1])){
                            $your_name = $data[1];
                        }

                        if(isset($data[2]) && !strict_empty($data[2])){
                            $rating_star = $data[2];
                        }

                        if(isset($data[3]) && !strict_empty($data[3])){
                            $comment = $data[3];
                        }

                        if(empty($comment)){
                            $is_starred = 0;
                        }

                        if(isset($data[4]) && !strict_empty($data[4])){
                            $email = $data[4];
                        }

                        if(isset($data[0]) && !strict_empty($data[0])){

                            $date_created = date ('Y-m-d', strtotime($data[0]));
                        }

                        if($row > 1 && !strict_empty($your_name) && !strict_empty($comment)){
                            //create entry
                            $entry = array(
                                "form_id" => $gravity_form_id,
                                "1" => $your_name, //your name
                                "2" => $email, //email
                                "4" => $rating_star, //rating star
                                "3" => $comment, //comment
                                //"5" => "1", //admin approve
                                "is_starred" => $is_starred,
                                "date_created" => $date_created,
                            );

                            //save entry to Gravity Form
                            $entry_id = GFAPI::add_entry($entry);

                            if(empty($entry_id) || is_null($entry_id)){
                                $error_message = "Could not finish the importing process!!!";
                                break;
                            }
                        }

                        $row++;
                    }
                    fclose($handle);
                }
                ini_set('auto_detect_line_endings',FALSE);
                $error_flag = 0;
                $error_message = "Uploaded and imported file successfully!!!";
            }

        }


    }

    include 'go-import-review-form.php';
}

